---  

- name:     Download config file for data source
  get_url:
    url:    "{{ item.config_url }}"
    dest:   "{{ item.config }}"
    owner:  "{{ domain_account.username }}"
    group:  "{{ domain_account.group }}"    
    mode:   0750
  with_items: "{{ system_data_sources }}"
  
- name:     Download secret file for data source
  get_url:
    url:    "{{ item.secret_url }}"
    dest:   "{{ item.secret }}"
    owner:  "{{ domain_account.username }}"
    group:  "{{ domain_account.group }}"    
    mode:   0750    
  with_items: "{{ system_data_sources }}"

- name:     Download config file for {{ realm_providers.name }}
  get_url:
    url:    "{{ realm_providers.config_url }}"
    dest:   "{{ realm_providers.config }}"
    owner:  "{{ domain_account.username }}"
    group:  "{{ domain_account.group }}"    
    mode:   0750

- name:     Download secret file for {{ realm_providers.name }}
  get_url:
    url:    "{{ realm_providers.secret_url }}"
    dest:   "{{ realm_providers.secret }}"
    owner:  "{{ domain_account.username }}"
    group:  "{{ domain_account.group }}"    
    mode:   0750        
  
- name: Expect {{ weblogic_servers['admin'].instance_address }} to be listening on {{ weblogic_servers['admin'].instance_port }}
  wait_for:
      host: "{{ weblogic_servers['admin'].instance_address }}"
      port: "{{ weblogic_servers['admin'].instance_port }}"
      state: started
      timeout: "{{ timeout.admin }}"      
  register: admin_listen
  
- block:    
    - name: Update config_misc.py template 
      template:
        src: config_misc.py.j2
        dest: "{{ staging_folder.domain }}/config_misc.py"
        owner: "{{ domain_account.username }}"
        group: "{{ domain_account.group }}"
        mode: 0774              
    - name: Configure {{ weblogic_servers[server].instance_name }} miscellaneous settings
      shell: "{{ weblogic_install.oracle_home }}/oracle_common/common/bin/wlst.sh {{ staging_folder.domain }}/config_misc.py"
  when: admin_listen.state == 'started'
  
- fail: 
    msg: "The {{ weblogic_servers[server].instance_address }} is not listening on {{ weblogic_servers[server].instance_port }}"
  when: admin_listen.state != 'started'  